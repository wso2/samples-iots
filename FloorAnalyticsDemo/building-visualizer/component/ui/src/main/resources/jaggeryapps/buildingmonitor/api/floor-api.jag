<%
/*
 * Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

var log = new Log("api/invoker-api.jag");

var uri = request.getRequestURI();
var uriMatcher = new URIMatcher(String(uri));

var constants = require("/app/modules/constants.js");
var devicemgtProps = require("/app/modules/conf-reader/main.js")["conf"];
var serviceInvokers = require("/app/modules/oauth/token-protected-service-invokers.js")["invokers"];

if (uriMatcher.match("/{context}/api/floor/{buildingId}/{floorId}")) {
    var uploadedFile = request.getFile("files");
    var requestHeaders = [];

    var contentType = request.getHeader(constants.CONTENT_TYPE_IDENTIFIER);
    requestHeaders.push({"name": constants.CONTENT_TYPE_IDENTIFIER, "value" : contentType});
    var elements = uriMatcher.elements();
    var requestURL = "/senseme/building/" + elements.buildingId+ "/" + elements.floorId;
    var requestPayload = uploadedFile;

    var restAPIEndpoint = devicemgtProps["httpsURL"] + requestURL;
    try {
        serviceInvokers.HttpClient.post(
            restAPIEndpoint,
            requestPayload,
            function (httpMethod) {
                response.sendRedirect("/buildingmonitor/floor?buildingId=" + elements.buildingId + "&floorId=" +
                    elements.floorId);
            },
            function (httpMethod) {
                response.sendRedirect("/buildingmonitor/floor?buildingId=" + elements.buildingId + "&floorId=" +
                    elements.floorId + "&errorMessage=[" + response['status'] + "]-" + response['statusText']);
            },requestHeaders
        );
    } catch (e) {
        //Since this is an API we'll log the error message.
        log.error(e.message); // JavaScript error message
        log.error(e.stack); // Executed JavaScript file stack
        throw new Error("Exception occurred while trying to access " +
            "backend REST API services from Jaggery API invoker layer", e);
    }
}
%>
